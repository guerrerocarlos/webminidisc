{"version":3,"sources":["images/chrome-icon.svg","webpack:///./src/services/atracdenc-worker.ts?dc3c","serviceWorker.ts","utils.ts","services/netmd.ts","services/registry.ts","redux/upload-dialog-feature.ts","redux/rename-dialog-feature.ts","redux/error-dialog-feature.ts","redux/convert-dialog-feature.ts","redux/dump-dialog-feature.ts","redux/record-dialog-feature.ts","redux/app-feature.ts","redux/main-feature.ts","redux/store.ts","redux/actions.ts","components/about-dialog.tsx","components/topmenu.tsx","components/welcome.tsx","components/rename-dialog.tsx","components/upload-dialog.tsx","components/record-dialog.tsx","components/error-dialog.tsx","components/convert-dialog.tsx","components/controls.tsx","components/dump-dialog.tsx","components/main.tsx","components/app.tsx","services/atracdenc-worker.ts","services/audio-export.ts","index.tsx","services/mediarecorder.ts"],"names":["module","exports","Worker","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","console","log","state","controller","onUpdate","onSuccess","update","catch","error","sleep","ms","Promise","resolve","setTimeout","async","sleepWithProgressCallback","cb","elapsedSecs","interval","setInterval","Math","min","clearInterval","useShallowEqualSelector","selector","useSelector","shallowEqual","getPublicPathFor","script","sanitizeTitle","title","normalize","replace","require","ServiceRegistry","slice","createSlice","name","initialState","visible","writtenProgress","encryptedProgress","totalProgress","trackTotal","trackConverting","trackCurrent","titleCurrent","titleConverting","reducers","setVisible","action","payload","setWriteProgress","encrypted","written","total","setTrackProgress","current","converting","reducer","actions","enableBatching","index","setCurrentName","setIndex","setErrorMessage","format","setFormat","inputDeviceId","setInputDeviceId","trackDone","setProgress","mainView","loading","pairingFailed","pairingMessage","browserSupported","darkMode","key","defaultValue","res","localStorage","getItem","JSON","parse","e","loadPreference","aboutDialogVisible","setState","setLoading","setPairingFailed","setPairingMessage","setBrowserSupported","setDarkMode","value","setItem","stringify","showAboutDialog","disc","deviceName","setDisc","setDeviceName","store","configureStore","renameDialog","uploadDialog","errorDialog","convertDialog","dumpDialog","recordDialog","appState","main","middleware","getDefaultMiddleware","listContent","dispatch","appStateActions","serviceRegistry","netmdService","getDeviceName","batchActions","mainActions","WireformatDict","SP","Wireformat","pcm","LP2","lp2","LP105","l105kbps","LP4","lp4","convertAndUpload","files","getState","audioExportService","wireformat","uploadDialogActions","updateProgressCallback","trackUpdate","length","updateTrack","maxTitleLength","getTracks","map","track","reduce","acc","floor","errorMessage","i","item","converted","convertNext","f","push","reject","data","prepare","export","file","err","j","conversionIterator","extStartIndex","lastIndexOf","substring","upload","actionToDispatch","concat","errorDialogAction","Transition","React","forwardRef","props","ref","Slide","direction","AboutDialog","useDispatch","Dialog","open","maxWidth","fullWidth","TransitionComponent","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Link","rel","href","target","DialogActions","Button","onClick","appActions","TopMenu","menuAnchorEl","setMenuAnchorEl","useState","menuOpen","handleMenuClose","handleWipeDisc","wipeDisc","handleRefresh","handleRenameDisc","renameDialogActions","handleExit","menuItems","MenuItem","Fragment","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorEl","keepMounted","onClose","useStyles","makeStyles","theme","position","flex","display","justifyContent","flexDirection","alignItems","button","marginTop","spacing","minWidth","chromeLogo","width","height","why","alignSelf","headBox","Welcome","classes","toLowerCase","showWhyUnsupported","setWhyUnsupported","Box","className","Typography","component","variant","align","color","init","connect","pair","message","FormControl","style","visibility","FormHelperText","preventDefault","alt","src","ChromeIconPath","RenameDialog","renameDialogVisible","renameDialogTitle","renameDialogIndex","what","handleCancelRename","handleDoRename","newName","renameDisc","renameTrack","TextField","autoFocus","label","type","onKeyDown","onChange","progressPerc","progressBar","uploadLabel","UploadDialog","progressValue","bufferValue","convertedValue","aria-describedby","LinearProgress","valueBuffer","RecordDialog","round","ErrorDialog","errorDialogActions","container","formControl","ConvertDialog","handleClose","convertDialogActions","InputLabel","Select","labelId","ev","input","Input","Controls","handlePrev","useCallback","prev","handlePlay","play","handleStop","stop","handleNext","next","marginRight","selectEmpty","head","textShadow","fontSize","typography","h2","textAlign","marginBottom","DumpDialog","trackIndexes","devices","setDevices","mediaRecorderService","stopTestInput","dumpDialogActions","handleChange","deviceId","playTestInput","handleStartTransfer","indexes","recordDialogAction","tracks","filter","t","indexOf","entries","gotoTrack","getPosition","expected","every","_","pause","initStream","startRecording","durationInSec","duration","perc","stopRecording","downloadRecorded","closeStream","useEffect","mediaDevices","getUserMedia","audio","inputDevices","enumerateDevices","device","kind","updateDeviceList","displayEmpty","disabled","add","bottom","right","overflowY","marginLeft","outline","toolbar","breakpoints","up","toolbarLabel","toolbarHighlight","palette","secondary","backgroundColor","lighten","light","text","primary","dark","formatBadge","BadgeImpl","badge","colorPrimary","border","background","paper","padding","titleCell","overflow","textOverflow","indexCell","whiteSpace","paddingRight","backdrop","zIndex","drawer","remainingTimeTooltip","textDecoration","textDecorationStyle","EncodingName","Encoding","sp","Main","selected","setSelected","selectedCount","moveMenuAnchorEl","setMoveMenuAnchorEl","handleShowMoveMenu","handleCloseMoveMenu","handleMoveSelectedTrack","destIndex","srcIndex","moveTrack","handleShowDumpDialog","uploadedFiles","setUploadedFiles","onDrop","acceptedFiles","rejectedFiles","getRootProps","getInputProps","isDragActive","useDropzone","accept","noClick","group","groups","encoding","formatTimeFromFrames","sort","l","r","handleRenameDoubleClick","selectedIndex","currentName","find","left","Tooltip","arrow","Toolbar","clsx","Checkbox","indeterminate","checked","inputProps","PaperProps","maxHeight","Array","fill","reverse","deleteTrack","Table","size","TableHead","TableRow","TableCell","TableBody","hover","includes","onDoubleClick","handleSelectClick","Backdrop","Fab","layout","copyright","down","flexWrap","minidiscLogo","controlsContainer","paddingLeft","order","darkTheme","createMuiTheme","contrastText","lightTheme","App","ThemeProvider","CssBaseline","Paper","undefined","Date","getFullYear","CircularProgress","AtracdencProcess","constructor","worker","messageCallback","onmessage","this","handleMessage","bind","postMessage","bitrate","result","terminate","WorkerGlobalScope","self","Module","others","importScripts","m","setLogger","msg","stream","inWavFile","outAt3File","dataArray","Uint8Array","FS","writeFile","callMain","stat","tmp","outAt3FileStream","read","close","buffer","AtracdencWorker","debug","netmdInterface","logger","_fn","args","method","info","warn","child","iface","openNewDevice","usb","openPairedDevice","netMd","finalize","setTrackTitle","oldName","getDiscTitle","oldRawName","_getDiscTitle","hasGroups","hasGroupsAndTitle","startsWith","newNameWithGroups","cacheTOC","setDiscTitle","syncTOC","eraseTrack","eraseDisc","dst","progressCallback","byteLength","updateProgress","w","webWorkerAsyncPacketIterator","makeGetAsyncPacketIteratorOnWorkerThread","encryptedBytes","mdTrack","MDTrack","download","writtenBytes","nextTrack","previousTrack","ffmpegProcess","atracdencProcess","loglines","inFileName","outFileNameNoExt","setLogging","createWorker","corePath","workerPath","load","ext","split","Error","write","transcode","audioFormatRegex","inputFormatRegex","line","outFileName","encode","recorder","audioContext","analyserNode","gainNode","AudioContext","createGain","createAnalyser","createMediaStreamSource","destination","recordConstraints","autoGainControl","channelCount","echoCancellation","noiseSuppression","sampleRate","highpassFilter","audioTracks","getAudioTracks","getSettings","Recorder","record","forEach","exportWAV","url","URL","createObjectURL","a","document","createElement","body","appendChild","click","revokeObjectURL","removeChild","deferredPrompt","addEventListener","returnValue","ondisconnect","ReactDOM","render","getElementById","process","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5d38d809.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chrome-icon.f3b6c54c.svg\";","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"d9d28e43d31d94528197.worker.js\");\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/final-service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    console.log('state change', installingWorker.state);\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n            registration.update(); // Check for new version everytime we load the page\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import { useSelector, shallowEqual } from 'react-redux';\nimport { RootState } from './redux/store';\n\nexport function sleep(ms: number) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\n\nexport async function sleepWithProgressCallback(ms: number, cb: (perc: number) => void) {\n    let elapsedSecs = 1;\n    let interval = setInterval(() => {\n        elapsedSecs++;\n        cb(Math.min(100, ((elapsedSecs * 1000) / ms) * 100));\n    }, 1000);\n    await sleep(ms);\n    window.clearInterval(interval);\n}\n\nexport function useShallowEqualSelector<TState = RootState, TSelected = unknown>(selector: (state: TState) => TSelected): TSelected {\n    return useSelector(selector, shallowEqual);\n}\n\nexport function debugEnabled() {\n    return process.env.NODE_ENV === 'development';\n}\n\nexport function getPublicPathFor(script: string) {\n    return `${process.env.PUBLIC_URL}/${script}`;\n}\n\nexport function savePreference(key: string, value: unknown) {\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function loadPreference<T>(key: string, defaultValue: T): T {\n    let res = localStorage.getItem(key);\n    if (res === null) {\n        return defaultValue;\n    } else {\n        try {\n            return JSON.parse(res) as T;\n        } catch (e) {\n            return defaultValue;\n        }\n    }\n}\n\nexport function getAvailableCharsForTrackTitle(trackTitles: string[]) {\n    const maxChars = 1700; // see https://www.minidisc.org/md_toc.html\n    const usedChars = trackTitles.reduce((acc, title) => {\n        return acc + title.length;\n    }, 0);\n    return maxChars - usedChars;\n}\n\nexport function framesToSec(frames: number) {\n    return frames / 512;\n}\n\nexport function sanitizeTitle(title: string) {\n    return title.normalize('NFD').replace(/[^\\x00-\\x7F]/g, '');\n}\n\ndeclare let process: any;\n","import { openNewDevice, NetMDInterface, Disc, listContent, openPairedDevice, Wireformat, MDTrack, download } from 'netmd-js';\nimport { makeGetAsyncPacketIteratorOnWorkerThread } from 'netmd-js/dist/web-encrypt-worker';\nimport { Logger } from 'netmd-js/dist/logger';\nimport { sanitizeTitle, sleep } from '../utils';\n\nconst Worker = require('worker-loader!netmd-js/dist/web-encrypt-worker.js'); // eslint-disable-line import/no-webpack-loader-syntax\n\nexport interface NetMDService {\n    pair(): Promise<boolean>;\n    connect(): Promise<boolean>;\n    listContent(): Promise<Disc>;\n    getDeviceName(): Promise<string>;\n    finalize(): Promise<void>;\n    renameTrack(index: number, newTitle: string): Promise<void>;\n    renameDisc(newName: string): Promise<void>;\n    deleteTrack(index: number): Promise<void>;\n    moveTrack(src: number, dst: number): Promise<void>;\n    wipeDisc(): Promise<void>;\n    upload(\n        title: string,\n        data: ArrayBuffer,\n        format: Wireformat,\n        progressCallback: (progress: { written: number; encrypted: number; total: number }) => void\n    ): Promise<void>;\n\n    play(): Promise<void>;\n    pause(): Promise<void>;\n    stop(): Promise<void>;\n    next(): Promise<void>;\n    prev(): Promise<void>;\n    gotoTrack(index: number): Promise<void>;\n    getPosition(): Promise<number[] | null>;\n}\n\nexport class NetMDUSBService implements NetMDService {\n    private netmdInterface?: NetMDInterface;\n    private logger?: Logger;\n\n    constructor({ debug = false }: { debug: boolean }) {\n        if (debug) {\n            // Logging a few methods that have been causing issues with some units\n            const _fn = (...args: any) => {\n                if (args && args[0] && args[0].method) {\n                    console.log(...args);\n                }\n            };\n            this.logger = {\n                debug: _fn,\n                info: _fn,\n                warn: _fn,\n                error: _fn,\n                child: () => this.logger!,\n            };\n        }\n    }\n\n    async pair() {\n        let iface = await openNewDevice(navigator.usb, this.logger);\n        if (iface === null) {\n            return false;\n        }\n        this.netmdInterface = iface;\n        return true;\n    }\n\n    async connect() {\n        let iface = await openPairedDevice(navigator.usb, this.logger);\n        if (iface === null) {\n            return false;\n        }\n        this.netmdInterface = iface;\n        return true;\n    }\n\n    async listContent() {\n        return await listContent(this.netmdInterface!);\n    }\n\n    async getDeviceName() {\n        return await this.netmdInterface!.netMd.getDeviceName();\n    }\n\n    async finalize() {\n        await this.netmdInterface!.netMd.finalize();\n    }\n\n    async renameTrack(index: number, title: string) {\n        // Removing non ascii chars... Sorry, I didn't implement char encoding.\n        title = sanitizeTitle(title);\n        await this.netmdInterface!.setTrackTitle(index, title);\n    }\n\n    async renameDisc(newName: string) {\n        // TODO: This whole function should be moved in netmd-js\n        const oldName = await this.netmdInterface!.getDiscTitle();\n        const oldRawName = await this.netmdInterface!._getDiscTitle();\n        const hasGroups = oldRawName.indexOf('//') >= 0;\n        const hasGroupsAndTitle = oldRawName.startsWith('0;');\n\n        if (newName === oldName) {\n            return;\n        }\n\n        let newNameWithGroups;\n\n        if (hasGroups) {\n            if (hasGroupsAndTitle) {\n                newNameWithGroups = oldRawName.replace(/^0;.*?\\/\\//, newName !== '' ? `0;${newName}//` : ``); // Replace or delete the old title\n            } else {\n                newNameWithGroups = `0;${newName}//${oldRawName}`; // Add the new title\n            }\n        } else {\n            newNameWithGroups = newName;\n        }\n\n        await this.netmdInterface!.cacheTOC();\n        await this.netmdInterface!.setDiscTitle(newNameWithGroups);\n        await this.netmdInterface!.syncTOC();\n    }\n\n    async deleteTrack(index: number) {\n        await this.netmdInterface!.eraseTrack(index);\n        await sleep(100);\n    }\n\n    async wipeDisc() {\n        await this.netmdInterface!.eraseDisc();\n    }\n\n    async moveTrack(src: number, dst: number) {\n        await this.netmdInterface!.moveTrack(src, dst);\n    }\n\n    async upload(\n        title: string,\n        data: ArrayBuffer,\n        format: Wireformat,\n        progressCallback: (progress: { written: number; encrypted: number; total: number }) => void\n    ) {\n        let total = data.byteLength;\n        let written = 0;\n        let encrypted = 0;\n        function updateProgress() {\n            progressCallback({ written, encrypted, total });\n        }\n\n        let w = new Worker();\n\n        let webWorkerAsyncPacketIterator = makeGetAsyncPacketIteratorOnWorkerThread(w, ({ encryptedBytes }) => {\n            encrypted = encryptedBytes;\n            updateProgress();\n        });\n\n        // Removing non ascii chars... Sorry, I didn't implement char encoding.\n        title = sanitizeTitle(title);\n        let mdTrack = new MDTrack(title, format, data, 0x80000, webWorkerAsyncPacketIterator);\n\n        await download(this.netmdInterface!, mdTrack, ({ writtenBytes }) => {\n            written = writtenBytes;\n            updateProgress();\n        });\n\n        w.terminate();\n    }\n\n    async play() {\n        await this.netmdInterface!.play();\n    }\n    async pause() {\n        await this.netmdInterface!.pause();\n    }\n    async stop() {\n        await this.netmdInterface!.stop();\n    }\n    async next() {\n        await this.netmdInterface!.nextTrack();\n    }\n    async prev() {\n        await this.netmdInterface!.previousTrack();\n    }\n    async gotoTrack(index: number) {\n        await this.netmdInterface!.gotoTrack(index);\n    }\n    async getPosition() {\n        return await this.netmdInterface!.getPosition();\n    }\n}\n","import { NetMDService } from './netmd';\nimport { AudioExportService } from './audio-export';\nimport { MediaRecorderService } from './mediarecorder';\n\ninterface ServiceRegistry {\n    netmdService?: NetMDService;\n    audioExportService?: AudioExportService;\n    mediaRecorderService?: MediaRecorderService;\n}\n\nconst ServiceRegistry: ServiceRegistry = {};\n\nexport default ServiceRegistry;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface LoadingDialogState {\n    visible: boolean;\n    writtenProgress: number;\n    encryptedProgress: number;\n    totalProgress: number;\n\n    trackTotal: number;\n    trackConverting: number;\n    trackCurrent: number;\n\n    titleCurrent: string;\n    titleConverting: string;\n}\n\nconst initialState: LoadingDialogState = {\n    visible: false,\n    // Current Track Upload\n    writtenProgress: 0,\n    encryptedProgress: 0,\n    totalProgress: 1,\n\n    // Tracks done\n    trackTotal: 1,\n    trackConverting: 0,\n    trackCurrent: 0,\n    titleCurrent: '',\n    titleConverting: '',\n};\n\nexport const slice = createSlice({\n    name: 'uploadDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setWriteProgress: (state, action: PayloadAction<{ written: number; encrypted: number; total: number }>) => {\n            state.encryptedProgress = action.payload.encrypted;\n            state.writtenProgress = action.payload.written;\n            state.totalProgress = action.payload.total;\n        },\n        setTrackProgress: (\n            state,\n            action: PayloadAction<{ total: number; current: number; converting: number; titleCurrent: string; titleConverting: string }>\n        ) => {\n            state.trackTotal = action.payload.total;\n            state.trackCurrent = action.payload.current;\n            state.trackConverting = action.payload.converting;\n            state.titleCurrent = action.payload.titleCurrent;\n            state.titleConverting = action.payload.titleConverting;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface RenameDialogState {\n    visible: boolean;\n    title: string;\n    index: number;\n}\n\nconst initialState: RenameDialogState = {\n    visible: false,\n    title: '',\n    index: -1,\n};\n\nexport const slice = createSlice({\n    name: 'renameDialog',\n    initialState,\n    reducers: {\n        setVisible: (state: RenameDialogState, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setCurrentName: (state: RenameDialogState, action: PayloadAction<string>) => {\n            state.title = action.payload;\n        },\n        setIndex: (state: RenameDialogState, action: PayloadAction<number>) => {\n            state.index = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface ErrorDialogState {\n    visible: boolean;\n    error: string;\n}\n\nconst initialState: ErrorDialogState = {\n    visible: false,\n    error: ``,\n};\n\nconst slice = createSlice({\n    name: 'errorDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setErrorMessage: (state, action: PayloadAction<string>) => {\n            state.error = `${action.payload}`;\n        },\n    },\n});\n\nexport const { actions, reducer } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface ConvertDialogFeature {\n    visible: boolean;\n    format: string;\n}\n\nconst initialState: ConvertDialogFeature = {\n    visible: false,\n    format: `LP2`,\n};\n\nconst slice = createSlice({\n    name: 'convertDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setFormat: (state, action: PayloadAction<string>) => {\n            state.format = action.payload;\n        },\n    },\n});\n\nexport const { actions, reducer } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface DumpDialogState {\n    visible: boolean;\n    inputDeviceId: string;\n}\n\nconst initialState: DumpDialogState = {\n    visible: false,\n    inputDeviceId: '',\n};\n\nexport const slice = createSlice({\n    name: 'dumpDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setInputDeviceId: (state, action: PayloadAction<string>) => {\n            state.inputDeviceId = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface RecordingDialogState {\n    visible: boolean;\n\n    trackTotal: number;\n    trackDone: number;\n    trackCurrent: number;\n\n    titleCurrent: string;\n}\n\nconst initialState: RecordingDialogState = {\n    visible: false,\n\n    trackTotal: 1,\n    trackDone: 0,\n    trackCurrent: 0,\n\n    titleCurrent: '',\n\n    // visible: true,\n    // trackTotal: 4,\n    // trackDone: 1,\n    // trackCurrent: 25,\n\n    // titleCurrent: 'Seconda traccia',\n};\n\nexport const slice = createSlice({\n    name: 'recordDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setProgress: (\n            state,\n            action: PayloadAction<{ trackTotal: number; trackDone: number; trackCurrent: number; titleCurrent: string }>\n        ) => {\n            state.trackTotal = action.payload.trackTotal;\n            state.trackDone = action.payload.trackDone;\n            state.trackCurrent = action.payload.trackCurrent;\n            state.titleCurrent = action.payload.titleCurrent;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\nimport { savePreference, loadPreference } from '../utils';\n\ntype Views = 'WELCOME' | 'MAIN';\n\nexport interface AppState {\n    mainView: Views;\n    loading: boolean;\n    pairingFailed: boolean;\n    pairingMessage: string;\n    browserSupported: boolean;\n    darkMode: boolean;\n    aboutDialogVisible: boolean;\n}\n\nconst initialState: AppState = {\n    mainView: 'WELCOME',\n    loading: false,\n    pairingFailed: false,\n    pairingMessage: ``,\n    browserSupported: true,\n    darkMode: loadPreference('darkMode', false),\n    aboutDialogVisible: false,\n};\n\nexport const slice = createSlice({\n    name: 'app',\n    initialState,\n    reducers: {\n        setState: (state, action: PayloadAction<Views>) => {\n            state.mainView = action.payload;\n        },\n        setLoading: (state, action: PayloadAction<boolean>) => {\n            state.loading = action.payload;\n        },\n        setPairingFailed: (state, action: PayloadAction<boolean>) => {\n            state.pairingFailed = action.payload;\n        },\n        setPairingMessage: (state, action: PayloadAction<string>) => {\n            state.pairingMessage = action.payload;\n        },\n        setBrowserSupported: (state, action: PayloadAction<boolean>) => {\n            state.browserSupported = action.payload;\n        },\n        setDarkMode: (state, action: PayloadAction<boolean>) => {\n            state.darkMode = action.payload;\n            savePreference('darkMode', state.darkMode);\n        },\n        showAboutDialog: (state, action: PayloadAction<boolean>) => {\n            state.aboutDialogVisible = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { Disc } from 'netmd-js';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface MainState {\n    disc: Disc | null;\n    deviceName: string;\n}\n\nconst initialState: MainState = {\n    disc: null,\n    deviceName: '',\n};\n\nexport const slice = createSlice({\n    name: 'main',\n    initialState,\n    reducers: {\n        setDisc: (state, action: PayloadAction<Disc>) => {\n            state.disc = action.payload;\n        },\n        setDeviceName: (state, action: PayloadAction<string>) => {\n            state.deviceName = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport uploadDialog from './upload-dialog-feature';\nimport renameDialog from './rename-dialog-feature';\nimport errorDialog from './error-dialog-feature';\nimport convertDialog from './convert-dialog-feature';\nimport dumpDialog from './dump-dialog-feature';\nimport recordDialog from './record-dialog-feature';\nimport appState from './app-feature';\nimport main from './main-feature';\n\nexport const store = configureStore({\n    reducer: {\n        renameDialog,\n        uploadDialog,\n        errorDialog,\n        convertDialog,\n        dumpDialog,\n        recordDialog,\n        appState,\n        main,\n    },\n    middleware: [...getDefaultMiddleware()],\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { batchActions } from 'redux-batched-actions';\nimport { AppDispatch, RootState } from './store';\nimport { actions as uploadDialogActions } from './upload-dialog-feature';\nimport { actions as renameDialogActions } from './rename-dialog-feature';\nimport { actions as errorDialogAction } from './error-dialog-feature';\nimport { actions as recordDialogAction } from './record-dialog-feature';\nimport { actions as appStateActions } from './app-feature';\nimport { actions as mainActions } from './main-feature';\nimport serviceRegistry from '../services/registry';\nimport { Wireformat, getTracks } from 'netmd-js';\nimport { AnyAction } from '@reduxjs/toolkit';\nimport { getAvailableCharsForTrackTitle, framesToSec, sleepWithProgressCallback, sleep } from '../utils';\n\nexport function pair() {\n    return async function(dispatch: AppDispatch, getState: () => RootState) {\n        dispatch(appStateActions.setPairingFailed(false));\n\n        await serviceRegistry.audioExportService!.init();\n\n        try {\n            let connected = await serviceRegistry.netmdService!.connect();\n            if (connected) {\n                dispatch(appStateActions.setState('MAIN'));\n                return;\n            }\n        } catch (err) {\n            console.error(err);\n            // In case of error, just log and try to pair\n        }\n\n        try {\n            let paired = await serviceRegistry.netmdService!.pair();\n            if (paired) {\n                dispatch(appStateActions.setState('MAIN'));\n                return;\n            }\n            dispatch(batchActions([appStateActions.setPairingMessage(`Connection Failed`), appStateActions.setPairingFailed(true)]));\n        } catch (err) {\n            console.error(err);\n            let message = (err as Error).message;\n            dispatch(batchActions([appStateActions.setPairingMessage(message), appStateActions.setPairingFailed(true)]));\n        }\n    };\n}\n\nexport function listContent() {\n    return async function(dispatch: AppDispatch) {\n        // Issue loading\n        dispatch(appStateActions.setLoading(true));\n        let disc = await serviceRegistry.netmdService!.listContent();\n        let deviceName = await serviceRegistry.netmdService!.getDeviceName();\n        dispatch(batchActions([mainActions.setDisc(disc), mainActions.setDeviceName(deviceName), appStateActions.setLoading(false)]));\n    };\n}\n\nexport function renameTrack({ index, newName }: { index: number; newName: string }) {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        dispatch(renameDialogActions.setVisible(false));\n        try {\n            await netmdService!.renameTrack(index, newName);\n        } catch (err) {\n            console.error(err);\n            dispatch(batchActions([errorDialogAction.setVisible(true), errorDialogAction.setErrorMessage(`Rename failed.`)]));\n        }\n        listContent()(dispatch);\n    };\n}\n\nexport function renameDisc({ newName }: { newName: string }) {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        await netmdService!.renameDisc(newName);\n        dispatch(renameDialogActions.setVisible(false));\n        listContent()(dispatch);\n    };\n}\n\nexport function deleteTracks(indexes: number[]) {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        dispatch(appStateActions.setLoading(true));\n        indexes = indexes.sort();\n        indexes.reverse();\n        for (let index of indexes) {\n            await netmdService!.deleteTrack(index);\n        }\n        listContent()(dispatch);\n    };\n}\n\nexport function wipeDisc() {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        dispatch(appStateActions.setLoading(true));\n        await netmdService!.wipeDisc();\n        listContent()(dispatch);\n    };\n}\n\nexport function moveTrack(srcIndex: number, destIndex: number) {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        await netmdService!.moveTrack(srcIndex, destIndex);\n        listContent()(dispatch);\n    };\n}\n\nexport function recordTracks(indexes: number[], deviceId: string) {\n    return async function(dispatch: AppDispatch, getState: () => RootState) {\n        dispatch(\n            batchActions([\n                recordDialogAction.setVisible(true),\n                recordDialogAction.setProgress({ trackTotal: indexes.length, trackDone: 0, trackCurrent: 0, titleCurrent: '' }),\n            ])\n        );\n\n        let disc = getState().main.disc;\n        let tracks = getTracks(disc!).filter(t => indexes.indexOf(t.index) >= 0);\n\n        const { netmdService, mediaRecorderService } = serviceRegistry;\n\n        for (let [i, track] of tracks.entries()) {\n            dispatch(\n                recordDialogAction.setProgress({\n                    trackTotal: tracks.length,\n                    trackDone: i,\n                    trackCurrent: -1,\n                    titleCurrent: track.title ?? '',\n                })\n            );\n\n            // Wait for the track to be ready to play from 0:00\n            await netmdService!.gotoTrack(track.index);\n            await netmdService!.play();\n            console.log('Waiting for track to be ready to play');\n            let position = await netmdService!.getPosition();\n            let expected = [track.index, 0, 0, 1];\n            while (position === null || !expected.every((_, i) => expected[i] === position![i])) {\n                await sleep(250);\n                position = await netmdService!.getPosition();\n            }\n            await netmdService!.pause();\n            await netmdService?.gotoTrack(track.index);\n            console.log('Track is ready to play');\n\n            // Start recording and play track\n            await mediaRecorderService?.initStream(deviceId);\n            await mediaRecorderService?.startRecording();\n            await netmdService!.play();\n\n            // Wait until track is finished\n            let durationInSec = framesToSec(track.duration);\n            // await sleep(durationInSec * 1000);\n            await sleepWithProgressCallback(durationInSec * 1000, (perc: number) => {\n                dispatch(\n                    recordDialogAction.setProgress({\n                        trackTotal: tracks.length,\n                        trackDone: i,\n                        trackCurrent: perc,\n                        titleCurrent: track.title ?? '',\n                    })\n                );\n            });\n\n            // Stop recording and download the wav\n            await mediaRecorderService?.stopRecording();\n            mediaRecorderService?.downloadRecorded(`${track.title}`);\n\n            await mediaRecorderService?.closeStream();\n        }\n\n        await netmdService!.stop();\n        dispatch(recordDialogAction.setVisible(false));\n    };\n}\n\nexport const WireformatDict: { [k: string]: Wireformat } = {\n    SP: Wireformat.pcm,\n    LP2: Wireformat.lp2,\n    LP105: Wireformat.l105kbps,\n    LP4: Wireformat.lp4,\n};\n\nexport function convertAndUpload(files: File[], format: string) {\n    return async function(dispatch: AppDispatch, getState: () => RootState) {\n        const { audioExportService, netmdService } = serviceRegistry;\n        const wireformat = WireformatDict[format];\n\n        dispatch(uploadDialogActions.setVisible(true));\n\n        const updateProgressCallback = ({ written, encrypted, total }: { written: number; encrypted: number; total: number }) => {\n            dispatch(uploadDialogActions.setWriteProgress({ written, encrypted, total }));\n        };\n\n        let trackUpdate: {\n            current: number;\n            converting: number;\n            total: number;\n            titleCurrent: string;\n            titleConverting: string;\n        } = {\n            current: 0,\n            converting: 0,\n            total: files.length,\n            titleCurrent: '',\n            titleConverting: '',\n        };\n        const updateTrack = () => {\n            dispatch(uploadDialogActions.setTrackProgress(trackUpdate));\n        };\n\n        let conversionIterator = async function*(files: File[]) {\n            let converted: Promise<{ file: File; data: ArrayBuffer }>[] = [];\n\n            let i = 0;\n            function convertNext() {\n                if (i === files.length) {\n                    trackUpdate.converting = i;\n                    trackUpdate.titleConverting = ``;\n                    updateTrack();\n                    return;\n                }\n\n                let f = files[i];\n                trackUpdate.converting = i;\n                trackUpdate.titleConverting = f.name;\n                updateTrack();\n                i++;\n\n                converted.push(\n                    new Promise(async (resolve, reject) => {\n                        let data: ArrayBuffer;\n                        try {\n                            await audioExportService!.prepare(f);\n                            data = await audioExportService!.export({ format });\n                            convertNext();\n                            resolve({ file: f, data: data });\n                        } catch (err) {\n                            error = err;\n                            errorMessage = `${f.name}: Unsupported or unrecognized format`;\n                            reject(err);\n                        }\n                    })\n                );\n            }\n            convertNext();\n\n            let j = 0;\n            while (j < converted.length) {\n                yield await converted[j];\n                delete converted[j];\n                j++;\n            }\n        };\n\n        let disc = getState().main.disc;\n        let maxTitleLength = disc ? getAvailableCharsForTrackTitle(getTracks(disc).map(track => track.title || ``)) : -1;\n        maxTitleLength = Math.floor(maxTitleLength / files.length);\n\n        let error: any;\n        let errorMessage = ``;\n        let i = 1;\n        for await (let item of conversionIterator(files)) {\n            const { file, data } = item;\n\n            let title = file.name;\n            const extStartIndex = title.lastIndexOf('.');\n            if (extStartIndex > 0) {\n                title = title.substring(0, extStartIndex);\n            }\n            if (maxTitleLength > -1) {\n                title = title.substring(0, maxTitleLength);\n            }\n\n            trackUpdate.current = i++;\n            trackUpdate.titleCurrent = title;\n            updateTrack();\n            updateProgressCallback({ written: 0, encrypted: 0, total: 100 });\n            try {\n                await netmdService?.upload(title, data, wireformat, updateProgressCallback);\n            } catch (err) {\n                error = err;\n                errorMessage = `${file.name}: Error uploading to device`;\n                break;\n            }\n        }\n\n        let actionToDispatch: AnyAction[] = [uploadDialogActions.setVisible(false)];\n\n        if (error) {\n            console.error(error);\n            actionToDispatch = actionToDispatch.concat([\n                errorDialogAction.setVisible(true),\n                errorDialogAction.setErrorMessage(errorMessage),\n            ]);\n        }\n\n        dispatch(batchActions(actionToDispatch));\n        listContent()(dispatch);\n    };\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { actions as appActions } from '../redux/app-feature';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const AboutDialog = (props: {}) => {\n    const dispatch = useDispatch();\n\n    let visible = useShallowEqualSelector(state => state.appState.aboutDialogVisible);\n\n    const handleClose = () => {\n        dispatch(appActions.showAboutDialog(false));\n    };\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"about-dialog-slide-title\"\n        >\n            <DialogTitle id=\"about-dialog-slide-title\">About Web MiniDisc</DialogTitle>\n            <DialogContent>\n                <DialogContentText>Web MiniDisc has been made possible by</DialogContentText>\n                <ul>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://www.ffmpeg.org/\" target=\"_blank\">\n                            FFmpeg\n                        </Link>{' '}\n                        and{' '}\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/ffmpegjs/FFmpeg\" target=\"_blank\">\n                            ffmpegjs\n                        </Link>\n                        , to read your audio files (wav, mp3, ogg, mp4, etc...).\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/dcherednik/atracdenc/\" target=\"_blank\">\n                            Atracdenc\n                        </Link>\n                        , to support atrac3 encoding (lp2, lp4 audio formats).\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://emscripten.org/\" target=\"_blank\">\n                            Emscripten\n                        </Link>\n                        , to run both FFmpeg and Atracdenc in the browser.\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/cybercase/netmd-js\" target=\"_blank\">\n                            netmd-js\n                        </Link>\n                        , to send commands to NetMD devices using Javascript.\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/glaubitz/linux-minidisc\" target=\"_blank\">\n                            linux-minidisc\n                        </Link>\n                        , to make the netmd-js project possible.\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://material-ui.com/\" target=\"_blank\">\n                            material-ui\n                        </Link>\n                        , to build the user interface.\n                    </li>\n                </ul>\n                <DialogContentText>Attribution</DialogContentText>\n                <ul>\n                    <li>\n                        MiniDisc logo from{' '}\n                        <Link rel=\"noopener noreferrer\" href=\"https://en.wikipedia.org/wiki/MiniDisc\" target=\"_blank\">\n                            https://en.wikipedia.org/wiki/MiniDisc\n                        </Link>\n                    </li>\n                    <li>\n                        MiniDisc icon from{' '}\n                        <Link\n                            rel=\"noopener noreferrer\"\n                            href=\"https://www.deviantart.com/blinkybill/art/Sony-MiniDisc-Plastic-Icon-473812540\"\n                            target=\"_blank\"\n                        >\n                            http://fav.me/d7u3g3g\n                        </Link>\n                    </li>\n                </ul>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { batchActions } from 'redux-batched-actions';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport { wipeDisc, listContent } from '../redux/actions';\nimport { actions as appActions } from '../redux/app-feature';\nimport { actions as renameDialogActions } from '../redux/rename-dialog-feature';\nimport { useShallowEqualSelector } from '../utils';\nimport Link from '@material-ui/core/Link';\n\nexport const TopMenu = function() {\n    const dispatch = useDispatch();\n\n    let { mainView } = useShallowEqualSelector(state => state.appState);\n    let disc = useShallowEqualSelector(state => state.main.disc);\n\n    const [menuAnchorEl, setMenuAnchorEl] = React.useState<null | HTMLElement>(null);\n    const menuOpen = Boolean(menuAnchorEl);\n    const handleMenuClick = (event: React.MouseEvent<HTMLElement>) => {\n        setMenuAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setMenuAnchorEl(null);\n    };\n\n    const handleWipeDisc = () => {\n        dispatch(wipeDisc());\n        handleMenuClose();\n    };\n\n    const handleRefresh = () => {\n        dispatch(listContent());\n        handleMenuClose();\n    };\n\n    const handleRenameDisc = () => {\n        dispatch(\n            batchActions([\n                renameDialogActions.setVisible(true),\n                renameDialogActions.setCurrentName(disc?.title ?? ``),\n                renameDialogActions.setIndex(-1),\n            ])\n        );\n        handleMenuClose();\n    };\n\n    const handleExit = () => {\n        dispatch(appActions.setState('WELCOME'));\n        handleMenuClose();\n    };\n    const handleShowAbout = () => {\n        dispatch(appActions.showAboutDialog(true));\n        handleMenuClose();\n    };\n\n    const menuItems = [];\n    if (mainView === 'MAIN') {\n        menuItems.push(\n            <MenuItem key=\"update\" onClick={handleRefresh}>\n                Refresh\n            </MenuItem>\n        );\n        menuItems.push(\n            <MenuItem key=\"title\" onClick={handleRenameDisc}>\n                Rename Disc\n            </MenuItem>\n        );\n        menuItems.push(\n            <MenuItem key=\"wipe\" onClick={handleWipeDisc}>\n                Wipe Disc\n            </MenuItem>\n        );\n        menuItems.push(\n            <MenuItem key=\"exit\" onClick={handleExit}>\n                Exit\n            </MenuItem>\n        );\n    }\n    menuItems.push(\n        <MenuItem key=\"about\" onClick={handleShowAbout}>\n            About\n        </MenuItem>\n    );\n    menuItems.push(\n        <MenuItem key=\"github\" onClick={handleMenuClose}>\n            <Link rel=\"noopener noreferrer\" href=\"https://github.com/cybercase/webminidisc\" target=\"_blank\">\n                Fork me on GitHub\n            </Link>\n        </MenuItem>\n    );\n\n    return (\n        <React.Fragment>\n            <IconButton aria-label=\"actions\" aria-controls=\"actions-menu\" aria-haspopup=\"true\" onClick={handleMenuClick}>\n                <MoreVertIcon />\n            </IconButton>\n            <Menu id=\"actions-menu\" anchorEl={menuAnchorEl} keepMounted open={menuOpen} onClose={handleMenuClose}>\n                {menuItems}\n            </Menu>\n        </React.Fragment>\n    );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { pair } from '../redux/actions';\n\nimport { useShallowEqualSelector } from '../utils';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\n\nimport { AboutDialog } from './about-dialog';\nimport { TopMenu } from './topmenu';\nimport ChromeIconPath from '../images/chrome-icon.svg';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        position: 'relative',\n        flex: '1 1 auto',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        minWidth: 150,\n    },\n    spacing: {\n        marginTop: theme.spacing(1),\n    },\n    chromeLogo: {\n        marginTop: theme.spacing(1),\n        width: 96,\n        height: 96,\n    },\n    why: {\n        alignSelf: 'flex-start',\n        marginTop: theme.spacing(3),\n    },\n    headBox: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n}));\n\nexport const Welcome = (props: {}) => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const { browserSupported, pairingFailed, pairingMessage } = useShallowEqualSelector(state => state.appState);\n    if (pairingMessage.toLowerCase().match(/denied/)) {\n        // show linux instructions\n    }\n    // Access denied.\n\n    const [showWhyUnsupported, setWhyUnsupported] = useState(false);\n    const handleLearnWhy = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        setWhyUnsupported(true);\n    };\n\n    return (\n        <React.Fragment>\n            <Box className={classes.headBox}>\n                <Typography component=\"h1\" variant=\"h4\">\n                    Web MiniDisc\n                </Typography>\n                <TopMenu />\n            </Box>\n            <Typography component=\"h2\" variant=\"body2\">\n                Brings NetMD Devices to the Web\n            </Typography>\n            <Box className={classes.main}>\n                {browserSupported ? (\n                    <React.Fragment>\n                        <Typography component=\"h2\" variant=\"subtitle1\" align=\"center\" className={classes.spacing}>\n                            Press the button to connect to a NetMD device\n                        </Typography>\n\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => dispatch(pair())} className={classes.button}>\n                            Connect\n                        </Button>\n\n                        <FormControl error={true} className={classes.spacing} style={{ visibility: pairingFailed ? 'visible' : 'hidden' }}>\n                            <FormHelperText>{pairingMessage}</FormHelperText>\n                        </FormControl>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Typography component=\"h2\" variant=\"subtitle1\" align=\"center\" className={classes.spacing}>\n                            This Web browser is not supported.&nbsp;\n                            <Link rel=\"noopener noreferrer\" href=\"#\" onClick={handleLearnWhy}>\n                                Learn Why\n                            </Link>\n                        </Typography>\n\n                        <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.google.com/chrome/\">\n                            <img alt=\"Chrome Logo\" src={ChromeIconPath} className={classes.chromeLogo} />\n                        </Link>\n\n                        <Typography component=\"h2\" variant=\"subtitle1\" align=\"center\" className={classes.spacing}>\n                            Try using{' '}\n                            <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.google.com/chrome/\">\n                                Chrome\n                            </Link>{' '}\n                            instead\n                        </Typography>\n\n                        {showWhyUnsupported ? (\n                            <>\n                                <Typography component=\"p\" variant=\"body2\" className={classes.why}>\n                                    Web MiniDisc requires a browser that supports both{' '}\n                                    <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://wicg.github.io/webusb/\">\n                                        WebUSB\n                                    </Link>{' '}\n                                    and{' '}\n                                    <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://webassembly.org/\">\n                                        WebAssembly\n                                    </Link>\n                                    .\n                                </Typography>\n                                <ul>\n                                    <li>WebUSB is needed to control the NetMD device via the USB connection to your computer.</li>\n                                    <li>WebAssembly is used to convert the music to a MiniDisc compatible format</li>\n                                </ul>\n                            </>\n                        ) : null}\n                    </React.Fragment>\n                )}\n            </Box>\n            <AboutDialog />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\nimport { actions as renameDialogActions } from '../redux/rename-dialog-feature';\nimport { renameTrack, renameDisc } from '../redux/actions';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const RenameDialog = (props: {}) => {\n    let dispatch = useDispatch();\n\n    let renameDialogVisible = useShallowEqualSelector(state => state.renameDialog.visible);\n    let renameDialogTitle = useShallowEqualSelector(state => state.renameDialog.title);\n    let renameDialogIndex = useShallowEqualSelector(state => state.renameDialog.index);\n\n    const what = renameDialogIndex < 0 ? `Disc` : `Track`;\n\n    const handleCancelRename = () => {\n        dispatch(renameDialogActions.setVisible(false));\n    };\n\n    const handleDoRename = () => {\n        if (renameDialogIndex < 0) {\n            dispatch(renameDisc({ newName: renameDialogTitle }));\n        } else {\n            dispatch(renameTrack({ index: renameDialogIndex, newName: renameDialogTitle }));\n        }\n    };\n\n    return (\n        <Dialog\n            open={renameDialogVisible}\n            onClose={handleCancelRename}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"rename-dialog-title\"\n        >\n            <DialogTitle id=\"rename-dialog-title\">Rename {what}</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    id=\"name\"\n                    label={`${what} Name`}\n                    type=\"text\"\n                    fullWidth\n                    value={renameDialogTitle}\n                    onKeyDown={event => {\n                        event.key === `Enter` && handleDoRename();\n                    }}\n                    onChange={event => {\n                        dispatch(renameDialogActions.setCurrentName(event.target.value.substring(0, 120))); // MAX title length\n                    }}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCancelRename}>Cancel</Button>\n                <Button color={'primary'} onClick={handleDoRename}>\n                    Rename\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useShallowEqualSelector } from '../utils';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    progressPerc: {\n        marginTop: theme.spacing(1),\n    },\n    progressBar: {\n        marginTop: theme.spacing(3),\n    },\n    uploadLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const UploadDialog = (props: {}) => {\n    const classes = useStyles();\n\n    let {\n        visible,\n        writtenProgress,\n        encryptedProgress,\n        totalProgress,\n\n        trackTotal,\n        trackCurrent,\n        trackConverting,\n        titleCurrent,\n        titleConverting,\n    } = useShallowEqualSelector(state => state.uploadDialog);\n\n    let progressValue = Math.floor((writtenProgress / totalProgress) * 100);\n    let bufferValue = Math.floor((encryptedProgress / totalProgress) * 100);\n    let convertedValue = Math.floor((trackConverting / trackTotal) * 100);\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Recording...</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    {convertedValue === 100 && trackConverting === trackTotal\n                        ? `Conversion completed`\n                        : `Converting ${trackConverting + 1} of ${trackTotal}: ${titleConverting}`}\n                </DialogContentText>\n                <LinearProgress\n                    className={classes.progressBar}\n                    variant={convertedValue === 0 ? 'indeterminate' : 'determinate'}\n                    color=\"primary\"\n                    value={convertedValue}\n                />\n                <Box className={classes.progressPerc}>{convertedValue}%</Box>\n\n                <DialogContentText id=\"alert-dialog-slide-description\" className={classes.uploadLabel}>\n                    Uploading {trackCurrent} of {trackTotal}: {titleCurrent}\n                </DialogContentText>\n                <LinearProgress\n                    className={classes.progressBar}\n                    variant=\"buffer\"\n                    color=\"secondary\"\n                    value={progressValue}\n                    valueBuffer={bufferValue}\n                />\n                <Box className={classes.progressPerc}>{progressValue}%</Box>\n            </DialogContent>\n            <DialogActions></DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useShallowEqualSelector } from '../utils';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    progressPerc: {\n        marginTop: theme.spacing(1),\n    },\n    progressBar: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const RecordDialog = (props: {}) => {\n    const classes = useStyles();\n\n    let { visible, trackTotal, trackDone, trackCurrent, titleCurrent } = useShallowEqualSelector(state => state.recordDialog);\n\n    let progressValue = Math.round(trackCurrent);\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"record-dialog-slide-title\"\n            aria-describedby=\"record-dialog-slide-description\"\n        >\n            <DialogTitle id=\"record-dialog-slide-title\">Recording...</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"record-dialog-slide-description\">\n                    {`Recording track ${trackDone + 1} of ${trackTotal}: ${titleCurrent}`}\n                </DialogContentText>\n                <LinearProgress\n                    className={classes.progressBar}\n                    variant={trackCurrent >= 0 ? 'determinate' : 'indeterminate'}\n                    color=\"primary\"\n                    value={progressValue}\n                />\n                <Box className={classes.progressPerc}>{progressValue >= 0 ? `${progressValue}%` : ``}</Box>\n            </DialogContent>\n            <DialogActions></DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { actions as errorDialogActions } from '../redux/error-dialog-feature';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ErrorDialog = (props: {}) => {\n    const dispatch = useDispatch();\n\n    let { visible, error } = useShallowEqualSelector(state => state.errorDialog);\n\n    const handleClose = () => {\n        dispatch(errorDialogActions.setVisible(false));\n    };\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"error-dialog-slide-title\"\n            aria-describedby=\"error-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Error</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">{error}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { actions as convertDialogActions } from '../redux/convert-dialog-feature';\nimport { convertAndUpload } from '../redux/actions';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    formControl: {\n        minWidth: 120,\n    },\n}));\n\nexport const ConvertDialog = (props: { files: File[] }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    let { visible, format } = useShallowEqualSelector(state => state.convertDialog);\n\n    const handleClose = () => {\n        dispatch(convertDialogActions.setVisible(false));\n    };\n\n    const handleChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n        dispatch(convertDialogActions.setFormat(ev.target.value as string));\n    };\n\n    const handleConvert = () => {\n        handleClose();\n        dispatch(convertAndUpload(props.files, format));\n    };\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'xs'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"convert-dialog-slide-title\"\n            aria-describedby=\"convert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"convert-dialog-slide-title\">Upload Settings</DialogTitle>\n            <DialogContent>\n                <FormControl className={classes.formControl}>\n                    <InputLabel color=\"secondary\" id=\"convert-dialog-format\">\n                        Format\n                    </InputLabel>\n                    <Select\n                        labelId=\"convert-dialog-format-label\"\n                        id=\"convert-dialog-format\"\n                        value={format}\n                        color=\"secondary\"\n                        onChange={handleChange}\n                        input={<Input />}\n                    >\n                        <MenuItem value={`SP`}>SP</MenuItem>\n                        <MenuItem value={`LP2`}>LP2</MenuItem>\n                        <MenuItem value={`LP4`}>LP4</MenuItem>\n                    </Select>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleConvert}>Ok</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useCallback } from 'react';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Box from '@material-ui/core/Box';\n\nimport serviceRegistry from '../services/registry';\n\nexport const Controls = () => {\n    const handlePrev = useCallback(() => {\n        serviceRegistry.netmdService?.prev();\n    }, []);\n    const handlePlay = useCallback(() => {\n        serviceRegistry.netmdService?.play();\n    }, []);\n    const handleStop = useCallback(() => {\n        serviceRegistry.netmdService?.stop();\n    }, []);\n    const handleNext = useCallback(() => {\n        serviceRegistry.netmdService?.next();\n    }, []);\n    return (\n        <Box>\n            <IconButton aria-label=\"prev\" onClick={handlePrev}>\n                <SkipPreviousIcon />\n            </IconButton>\n            <IconButton aria-label=\"play\" onClick={handlePlay}>\n                <PlayArrowIcon />\n            </IconButton>\n            <IconButton aria-label=\"stop\" onClick={handleStop}>\n                <StopIcon />\n            </IconButton>\n            <IconButton aria-label=\"next\" onClick={handleNext}>\n                <SkipNextIcon />\n            </IconButton>\n        </Box>\n    );\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { recordTracks } from '../redux/actions';\nimport { actions as dumpDialogActions } from '../redux/dump-dialog-feature';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { Controls } from './controls';\nimport Box from '@material-ui/core/Box';\nimport serviceRegistry from '../services/registry';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-end',\n        justifyContent: 'space-between',\n        marginRight: -theme.spacing(2),\n    },\n    formControl: {\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    head: {\n        textShadow: '0px 0px 12px rgba(150, 150, 150, 1)',\n        fontSize: theme.typography.h2.fontSize,\n        textAlign: 'center',\n        marginBottom: theme.spacing(2),\n    },\n}));\n\nexport const DumpDialog = ({ trackIndexes }: { trackIndexes: number[] }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const [devices, setDevices] = useState<{ deviceId: string; label: string }[]>([]);\n    const [inputDeviceId, setInputDeviceId] = useState<string>('');\n\n    let { visible } = useShallowEqualSelector(state => state.dumpDialog);\n\n    const handleClose = useCallback(() => {\n        setInputDeviceId('');\n        serviceRegistry.mediaRecorderService?.stopTestInput();\n        dispatch(dumpDialogActions.setVisible(false));\n    }, [dispatch]);\n\n    const handleChange = useCallback(\n        (ev: React.ChangeEvent<{ value: unknown }>) => {\n            const deviceId = ev.target.value as string;\n            setInputDeviceId(deviceId);\n            serviceRegistry.mediaRecorderService?.stopTestInput();\n            serviceRegistry.mediaRecorderService?.playTestInput(deviceId);\n        },\n        [setInputDeviceId]\n    );\n\n    const handleStartTransfer = useCallback(() => {\n        dispatch(recordTracks(trackIndexes, inputDeviceId));\n        handleClose();\n    }, [trackIndexes, inputDeviceId, dispatch, handleClose]);\n\n    useEffect(() => {\n        async function updateDeviceList() {\n            await navigator.mediaDevices.getUserMedia({ audio: true });\n            let devices = await navigator.mediaDevices.enumerateDevices();\n            let inputDevices = devices\n                .filter(device => device.kind === 'audioinput')\n                .map(device => ({ deviceId: device.deviceId, label: device.label }));\n            setDevices(inputDevices);\n        }\n        if (visible) {\n            updateDeviceList();\n        }\n    }, [visible, setDevices]);\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"dump-dialog-slide-title\"\n            aria-describedby=\"dump-dialog-slide-description\"\n        >\n            <DialogTitle id=\"dump-dialog-slide-title\">Record Selected Tracks</DialogTitle>\n            <DialogContent>\n                <Typography component=\"p\" variant=\"h2\" className={classes.head}>\n                    {`💻 ⬅ 💽`}\n                </Typography>\n                <Typography component=\"p\" variant=\"body2\">\n                    1. Connect your MD Player line-out to your PC audio line-in.\n                </Typography>\n                <Typography component=\"p\" variant=\"body2\">\n                    2. Use the controls at the bottom right to play some tracks.\n                </Typography>\n                <Typography component=\"p\" variant=\"body2\">\n                    3. Select the input source. You should hear the tracks playing on your PC.\n                </Typography>\n                <Typography component=\"p\" variant=\"body2\">\n                    4. Adjust the input gain and the line-out volume of your device.\n                </Typography>\n                <Box className={classes.container}>\n                    <FormControl className={classes.formControl}>\n                        <Select value={inputDeviceId} onChange={handleChange} displayEmpty className={classes.selectEmpty}>\n                            <MenuItem value=\"\" disabled>\n                                Input Source\n                            </MenuItem>\n                            {devices.map(device => (\n                                <MenuItem key={device.deviceId} value={device.deviceId}>\n                                    {device.label}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>Input Source</FormHelperText>\n                    </FormControl>\n                    <Controls />\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleStartTransfer} disabled={inputDeviceId === ''}>\n                    Start Record\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport { listContent, deleteTracks, moveTrack } from '../redux/actions';\nimport { actions as renameDialogActions } from '../redux/rename-dialog-feature';\nimport { actions as convertDialogActions } from '../redux/convert-dialog-feature';\nimport { actions as dumpDialogActions } from '../redux/dump-dialog-feature';\n\nimport { formatTimeFromFrames, getTracks, Encoding } from 'netmd-js';\n\nimport { useShallowEqualSelector } from '../utils';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { batchActions } from 'redux-batched-actions';\n\nimport { RenameDialog } from './rename-dialog';\nimport { UploadDialog } from './upload-dialog';\nimport { RecordDialog } from './record-dialog';\nimport { ErrorDialog } from './error-dialog';\nimport { ConvertDialog } from './convert-dialog';\nimport { AboutDialog } from './about-dialog';\nimport { DumpDialog } from './dump-dialog';\nimport { TopMenu } from './topmenu';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport * as BadgeImpl from '@material-ui/core/Badge/Badge';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles(theme => ({\n    add: {\n        position: 'absolute',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n    },\n    main: {\n        overflowY: 'auto',\n        flex: '1 1 auto',\n        marginBottom: theme.spacing(3),\n        marginLeft: theme.spacing(-2),\n        marginRight: theme.spacing(-2),\n        outline: 'none',\n    },\n    toolbar: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(-2),\n        marginRight: theme.spacing(-2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            marginLeft: theme.spacing(-3),\n            marginRight: theme.spacing(-3),\n        },\n    },\n    toolbarLabel: {\n        flex: '1 1 100%',\n    },\n    toolbarHighlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    headBox: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    spacing: {\n        marginTop: theme.spacing(1),\n    },\n    formatBadge: {\n        ...(BadgeImpl as any).styles(theme).badge,\n        ...(BadgeImpl as any).styles(theme).colorPrimary,\n        position: 'static',\n        display: 'inline-flex',\n        border: `2px solid ${theme.palette.background.paper}`,\n        padding: '0 4px',\n    },\n    titleCell: {\n        overflow: 'hidden',\n        maxWidth: '40ch',\n        textOverflow: 'ellipsis',\n        // whiteSpace: 'nowrap',\n    },\n    indexCell: {\n        whiteSpace: 'nowrap',\n        paddingRight: 0,\n        width: `2ch`,\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    remainingTimeTooltip: {\n        textDecoration: 'underline',\n        textDecorationStyle: 'dotted',\n    },\n}));\n\nconst EncodingName: { [k: number]: string } = {\n    [Encoding.sp]: 'SP',\n    [Encoding.lp2]: 'LP2',\n    [Encoding.lp4]: 'LP4',\n};\n\nexport const Main = (props: {}) => {\n    let dispatch = useDispatch();\n    let disc = useShallowEqualSelector(state => state.main.disc);\n    let deviceName = useShallowEqualSelector(state => state.main.deviceName);\n\n    const [selected, setSelected] = React.useState<number[]>([]);\n    const selectedCount = selected.length;\n\n    const [moveMenuAnchorEl, setMoveMenuAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleShowMoveMenu = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n        setMoveMenuAnchorEl(event.currentTarget);\n    }, []);\n    const handleCloseMoveMenu = useCallback(() => {\n        setMoveMenuAnchorEl(null);\n    }, []);\n    const handleMoveSelectedTrack = useCallback(\n        (destIndex: number) => {\n            dispatch(moveTrack(selected[0], destIndex));\n            handleCloseMoveMenu();\n        },\n        [dispatch, selected, handleCloseMoveMenu]\n    );\n\n    const handleShowDumpDialog = useCallback(() => {\n        dispatch(dumpDialogActions.setVisible(true));\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listContent());\n    }, [dispatch]);\n\n    useEffect(() => {\n        setSelected([]); // Reset selection if disc changes\n    }, [disc]);\n\n    let [uploadedFiles, setUploadedFiles] = React.useState<File[]>([]);\n    const onDrop = useCallback(\n        (acceptedFiles: File[], rejectedFiles: File[]) => {\n            setUploadedFiles(acceptedFiles);\n            dispatch(convertDialogActions.setVisible(true));\n        },\n        [dispatch]\n    );\n    const { getRootProps, getInputProps, isDragActive, open } = useDropzone({ onDrop, accept: `audio/*`, noClick: true });\n\n    const classes = useStyles();\n\n    let tracks: { index: number; title: string; group: string; duration: string; encoding: string }[] = [];\n    if (disc !== null) {\n        for (let group of disc.groups) {\n            for (let track of group.tracks) {\n                tracks.push({\n                    index: track.index,\n                    title: track.title ?? `Unknown Title`,\n                    group: group.title ?? ``,\n                    encoding: EncodingName[track.encoding],\n                    duration: formatTimeFromFrames(track.duration, false),\n                });\n            }\n        }\n    }\n    tracks.sort((l, r) => l.index - r.index);\n\n    // Action Handlers\n    const handleSelectClick = (event: React.MouseEvent, item: number) => {\n        if (selected.includes(item)) {\n            setSelected(selected.filter(i => i !== item));\n        } else {\n            setSelected([...selected, item]);\n        }\n    };\n\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (selected.length < tracks.length) {\n            setSelected(tracks.map(t => t.index));\n        } else {\n            setSelected([]);\n        }\n    };\n\n    const handleRenameDoubleClick = (event: React.MouseEvent, item: number) => {\n        let selectedIndex = item;\n        let currentName = getTracks(disc!).find(track => track.index === selectedIndex)?.title ?? '';\n\n        dispatch(\n            batchActions([\n                renameDialogActions.setVisible(true),\n                renameDialogActions.setCurrentName(currentName),\n                renameDialogActions.setIndex(selectedIndex),\n            ])\n        );\n    };\n\n    const handleRenameActionClick = (event: React.MouseEvent) => {\n        handleRenameDoubleClick(event, selected[0]);\n    };\n\n    const handleDeleteSelected = (event: React.MouseEvent) => {\n        dispatch(deleteTracks(selected));\n    };\n\n    return (\n        <React.Fragment>\n            <Box className={classes.headBox}>\n                <Typography component=\"h1\" variant=\"h4\">\n                    {deviceName || `Loading...`}\n                </Typography>\n                <TopMenu />\n            </Box>\n            <Typography component=\"h2\" variant=\"body2\">\n                {disc !== null ? (\n                    <React.Fragment>\n                        <span>{`${formatTimeFromFrames(disc.left, false)} left of ${formatTimeFromFrames(disc.total, false)} `}</span>\n                        <Tooltip\n                            title={\n                                <React.Fragment>\n                                    <span>{`${formatTimeFromFrames(disc.left * 2, false)} left in LP2 Mode`}</span>\n                                    <br />\n                                    <span>{`${formatTimeFromFrames(disc.left * 4, false)} left in LP4 Mode`}</span>\n                                </React.Fragment>\n                            }\n                            arrow\n                        >\n                            <span className={classes.remainingTimeTooltip}>SP Mode</span>\n                        </Tooltip>\n                    </React.Fragment>\n                ) : (\n                    `Loading...`\n                )}\n            </Typography>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.toolbarHighlight]: selectedCount > 0,\n                })}\n            >\n                {selectedCount > 0 ? (\n                    <Checkbox\n                        indeterminate={selectedCount > 0 && selectedCount < tracks.length}\n                        checked={selectedCount > 0}\n                        onChange={handleSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all tracks' }}\n                    />\n                ) : null}\n                {selectedCount > 0 ? (\n                    <Typography className={classes.toolbarLabel} color=\"inherit\" variant=\"subtitle1\">\n                        {selectedCount} selected\n                    </Typography>\n                ) : (\n                    <Typography component=\"h3\" variant=\"h6\" className={classes.toolbarLabel}>\n                        {disc?.title || `Untitled Disc`}\n                    </Typography>\n                )}\n                {selectedCount === 1 ? (\n                    <React.Fragment>\n                        <Tooltip title=\"Move to Position\">\n                            <Button aria-controls=\"move-menu\" aria-label=\"Move\" onClick={handleShowMoveMenu}>\n                                Move\n                            </Button>\n                        </Tooltip>\n                        <Menu\n                            id=\"move-menu\"\n                            anchorEl={moveMenuAnchorEl}\n                            open={!!moveMenuAnchorEl}\n                            onClose={handleCloseMoveMenu}\n                            PaperProps={{\n                                style: {\n                                    maxHeight: 300,\n                                },\n                            }}\n                        >\n                            {Array(tracks.length)\n                                .fill(null)\n                                .map((_, i) => {\n                                    return (\n                                        <MenuItem key={`pos-${i}`} onClick={() => handleMoveSelectedTrack(i)}>\n                                            {i + 1}\n                                        </MenuItem>\n                                    );\n                                })}\n                        </Menu>\n                    </React.Fragment>\n                ) : null}\n\n                {selectedCount > 0 ? (\n                    <React.Fragment>\n                        <Tooltip title=\"Record from MD\">\n                            <Button aria-label=\"Record\" onClick={handleShowDumpDialog}>\n                                Record\n                            </Button>\n                        </Tooltip>\n                    </React.Fragment>\n                ) : null}\n\n                {selectedCount > 0 ? (\n                    <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\" onClick={handleDeleteSelected}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                ) : null}\n\n                {selectedCount > 0 ? (\n                    <Tooltip title=\"Rename\">\n                        <IconButton aria-label=\"rename\" disabled={selectedCount !== 1} onClick={handleRenameActionClick}>\n                            <EditIcon />\n                        </IconButton>\n                    </Tooltip>\n                ) : null}\n            </Toolbar>\n            <Box className={classes.main} {...getRootProps()}>\n                <input {...getInputProps()} />\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.indexCell}>#</TableCell>\n                            <TableCell>Title</TableCell>\n                            <TableCell>Format</TableCell>\n                            <TableCell align=\"right\">Duration</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tracks.map(track => (\n                            <TableRow\n                                hover\n                                selected={selected.includes(track.index)}\n                                key={track.index}\n                                onDoubleClick={event => handleRenameDoubleClick(event, track.index)}\n                                onClick={event => handleSelectClick(event, track.index)}\n                            >\n                                <TableCell className={classes.indexCell}>{track.index + 1}</TableCell>\n                                <TableCell className={classes.titleCell} title={track.title}>\n                                    {track.title || `No Title`}\n                                </TableCell>\n                                <TableCell>\n                                    <span className={classes.formatBadge}>{track.encoding}</span>\n                                </TableCell>\n                                <TableCell align=\"right\">{track.duration}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <Backdrop className={classes.backdrop} open={isDragActive}>\n                    Drop your Music to Upload\n                </Backdrop>\n            </Box>\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.add} onClick={open}>\n                <AddIcon />\n            </Fab>\n\n            <UploadDialog />\n            <RenameDialog />\n            <ErrorDialog />\n            <ConvertDialog files={uploadedFiles} />\n            <RecordDialog />\n            <DumpDialog trackIndexes={selected} />\n            <AboutDialog />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { useShallowEqualSelector } from '../utils';\nimport { actions as appActions } from '../redux/app-feature';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport { Welcome } from './welcome';\nimport { Main } from './main';\nimport { Controls } from './controls';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: 'auto',\n        height: '100%',\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\n            width: 700,\n        },\n    },\n\n    paper: {\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2),\n        height: '100%',\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n            height: 600,\n        },\n        [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\n            height: 700,\n        },\n    },\n    copyright: {\n        display: 'flex',\n        alignItems: 'center',\n        [theme.breakpoints.down(600 + theme.spacing(2) * 2)]: {\n            flexWrap: 'wrap',\n        },\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    minidiscLogo: {\n        width: 48,\n    },\n    controlsContainer: {\n        flex: '1 1 auto',\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(8),\n        [theme.breakpoints.down(600 + theme.spacing(2) * 2)]: {\n            order: -1,\n            width: '100%',\n            paddingLeft: 0,\n        },\n    },\n}));\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#6ec6ff',\n            main: '#2196f3',\n            dark: '#0069c0',\n            contrastText: '#fff',\n        },\n    },\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        type: 'light',\n    },\n});\n\nconst App = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    let { mainView, loading, darkMode } = useShallowEqualSelector(state => state.appState);\n\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n                <CssBaseline />\n\n                <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        {mainView === 'WELCOME' ? <Welcome /> : null}\n                        {mainView === 'MAIN' ? <Main /> : null}\n\n                        <Box className={classes.copyright}>\n                            <IconButton onClick={() => dispatch(appActions.setDarkMode(!darkMode))}>\n                                <Brightness2Icon color={darkMode ? 'secondary' : undefined} />\n                            </IconButton>\n                            <Typography variant=\"body2\" color=\"textSecondary\" style={{ marginRight: `8px` }}>\n                                {'© '}\n                                <Link rel=\"noopener noreferrer\" color=\"inherit\" target=\"_blank\" href=\"https://stefano.brilli.me/\">\n                                    Stefano Brilli\n                                </Link>{' '}\n                                {new Date().getFullYear()}\n                                {'.'}\n                            </Typography>\n                            <Box className={classes.controlsContainer}>{mainView === 'MAIN' ? <Controls /> : null}</Box>\n                        </Box>\n                    </Paper>\n                </main>\n\n                <Backdrop className={classes.backdrop} open={loading}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","/* eslint no-restricted-globals: 0 */\nimport { getPublicPathFor } from '../utils';\nexport class AtracdencProcess {\n    private messageCallback?: (ev: MessageEvent) => void;\n\n    constructor(public worker: Worker) {\n        worker.onmessage = this.handleMessage.bind(this);\n    }\n\n    async init() {\n        await new Promise<MessageEvent>(resolve => {\n            this.messageCallback = resolve;\n            this.worker.postMessage({ action: 'init' });\n        });\n    }\n\n    async encode(data: ArrayBuffer, bitrate: string) {\n        let eventData = await new Promise<MessageEvent>(resolve => {\n            this.messageCallback = resolve;\n            this.worker.postMessage({ action: 'encode', bitrate, data }, [data]);\n        });\n        return eventData.data.result as Uint8Array;\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    handleMessage(ev: MessageEvent) {\n        this.messageCallback!(ev);\n        this.messageCallback = undefined;\n    }\n}\n\nif (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n    // Worker\n    let Module: any;\n    onmessage = async (ev: MessageEvent) => {\n        const { action, ...others } = ev.data;\n        if (action === 'init') {\n            self.importScripts(getPublicPathFor(`atracdenc.js`));\n            (self as any).Module().then((m: any) => {\n                Module = m;\n                self.postMessage({ action: 'init' });\n                Module.setLogger && Module.setLogger((msg: string, stream: string) => console.log(`${stream}: ${msg}`));\n            });\n        } else if (action === 'encode') {\n            const { bitrate, data } = others;\n            const inWavFile = `inWavFile.wav`;\n            const outAt3File = `outAt3File.aea`;\n            const dataArray = new Uint8Array(data);\n            Module.FS.writeFile(`${inWavFile}`, dataArray);\n            Module.callMain([`-e`, `atrac3`, `-i`, inWavFile, `-o`, outAt3File, `--bitrate`, bitrate]);\n\n            // Read file and trim header (96 bytes)\n            let fileStat = Module.FS.stat(outAt3File);\n            let size = fileStat.size;\n            let tmp = new Uint8Array(size - 96);\n            let outAt3FileStream = Module.FS.open(outAt3File, 'r');\n            Module.FS.read(outAt3FileStream, tmp, 0, tmp.length, 96);\n            Module.FS.close(outAt3FileStream);\n\n            let result = tmp.buffer;\n\n            self.postMessage(\n                {\n                    action: 'encode',\n                    result,\n                },\n                [result]\n            );\n        }\n    };\n} else {\n    // Main\n}\n","import { createWorker, setLogging } from '@ffmpeg/ffmpeg';\nimport { AtracdencProcess } from './atracdenc-worker';\nimport { getPublicPathFor } from '../utils';\nconst AtracdencWorker = require('worker-loader!./atracdenc-worker'); // eslint-disable-line import/no-webpack-loader-syntax\n\ninterface LogPayload {\n    message: string;\n    action: string;\n}\n\nexport interface AudioExportService {\n    init(): Promise<void>;\n    export(params: { format: string }): Promise<ArrayBuffer>;\n    info(): Promise<{ format: string | null; input: string | null }>;\n    prepare(file: File): Promise<void>;\n}\n\nexport class FFMpegAudioExportService implements AudioExportService {\n    public ffmpegProcess: any;\n    public atracdencProcess?: AtracdencProcess;\n    public loglines: { action: string; message: string }[] = [];\n    public inFileName: string = ``;\n    public outFileNameNoExt: string = ``;\n\n    async init() {\n        setLogging(true);\n    }\n\n    async prepare(file: File) {\n        this.loglines = [];\n        this.ffmpegProcess = createWorker({\n            logger: (payload: LogPayload) => {\n                this.loglines.push(payload);\n                console.log(payload.action, payload.message);\n            },\n            corePath: getPublicPathFor('ffmpeg-core.js'),\n            workerPath: getPublicPathFor('worker.min.js'),\n        });\n        await this.ffmpegProcess.load();\n\n        this.atracdencProcess = new AtracdencProcess(new AtracdencWorker());\n        await this.atracdencProcess.init();\n\n        let ext = file.name.split('.').slice(-1);\n        if (ext.length === 0) {\n            throw new Error(`Unrecognized file format: ${file.name}`);\n        }\n\n        this.inFileName = `inAudioFile.${ext[0]}`;\n        this.outFileNameNoExt = `outAudioFile`;\n\n        await this.ffmpegProcess.write(this.inFileName, file);\n    }\n\n    async info() {\n        await this.ffmpegProcess.transcode(this.inFileName, `${this.outFileNameNoExt}.metadata`, `-f ffmetadata`);\n\n        let audioFormatRegex = /Audio:\\s(.*?),/; // Actual content\n        let inputFormatRegex = /Input #0,\\s(.*?),/; // Container\n        let format: string | null = null;\n        let input: string | null = null;\n\n        for (let line of this.loglines) {\n            let match = line.message.match(audioFormatRegex);\n            if (match !== null) {\n                format = match[1];\n                continue;\n            }\n            match = line.message.match(inputFormatRegex);\n            if (match !== null) {\n                input = match[1];\n                continue;\n            }\n            if (format !== null && input !== null) {\n                break;\n            }\n        }\n\n        return { format, input };\n    }\n\n    async export({ format }: { format: string }) {\n        let result: ArrayBuffer;\n        if (format === `SP`) {\n            const outFileName = `${this.outFileNameNoExt}.raw`;\n            await this.ffmpegProcess.transcode(this.inFileName, outFileName, '-f s16be -ar 44100');\n            let { data } = await this.ffmpegProcess.read(outFileName);\n            result = data.buffer;\n        } else {\n            const outFileName = `${this.outFileNameNoExt}.wav`;\n            await this.ffmpegProcess.transcode(this.inFileName, outFileName, '-f wav -ar 44100');\n            let { data } = await this.ffmpegProcess.read(outFileName);\n            let bitrate: string = `0`;\n            switch (format) {\n                case `LP2`:\n                    bitrate = `128`;\n                    break;\n                case `LP105`:\n                    bitrate = `102`;\n                    break;\n                case `LP4`:\n                    bitrate = `64`;\n                    break;\n            }\n            result = await this.atracdencProcess!.encode(data.buffer, bitrate);\n        }\n        this.ffmpegProcess.worker.terminate();\n        this.atracdencProcess!.terminate();\n        return result;\n    }\n}\n","/* eslint no-restricted-globals: 0 */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { NetMDUSBService } from './services/netmd';\nimport { NetMDMockService } from './services/netmd-mock';\nimport serviceRegistry from './services/registry';\n\nimport { store } from './redux/store';\nimport { actions as appActions } from './redux/app-feature';\n\nimport App from './components/app';\n\nimport './index.css';\nimport { FFMpegAudioExportService } from './services/audio-export';\nimport { MediaRecorderService } from './services/mediarecorder';\n\nserviceRegistry.netmdService = new NetMDUSBService({ debug: true });\n// serviceRegistry.netmdService = new NetMDMockService(); // Uncomment to work without a device attached\nserviceRegistry.audioExportService = new FFMpegAudioExportService();\nserviceRegistry.mediaRecorderService = new MediaRecorderService();\n\n(function setupEventHandlers() {\n    window.addEventListener('beforeunload', ev => {\n        let isUploading = store.getState().uploadDialog.visible;\n        if (!isUploading) {\n            return;\n        }\n        ev.preventDefault();\n        ev.returnValue = `Warning! Recording will be interrupted`;\n    });\n\n    if (navigator && navigator.usb) {\n        navigator.usb.ondisconnect = function() {\n            store.dispatch(appActions.setState('WELCOME'));\n        };\n    } else {\n        store.dispatch(appActions.setBrowserSupported(false));\n    }\n\n    // eslint-disable-next-line\n    let deferredPrompt: any;\n    window.addEventListener('beforeinstallprompt', (e: any) => {\n        e.preventDefault();\n        deferredPrompt = e;\n    });\n})();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// serviceWorker.unregister();\nserviceWorker.register();\n","import { sanitizeTitle, getPublicPathFor } from '../utils';\nimport Recorder from 'recorderjs';\n\nexport class MediaRecorderService {\n    public recorder: any;\n    public stream?: MediaStream;\n    public audioContext?: AudioContext;\n    public analyserNode?: AnalyserNode;\n    public gainNode?: GainNode;\n\n    playTestInput(deviceId: string) {\n        this.audioContext = new AudioContext();\n        this.gainNode = this.audioContext.createGain();\n        this.analyserNode = this.audioContext.createAnalyser();\n\n        this.initStream(deviceId).then(() => {\n            const source = this.audioContext!.createMediaStreamSource(this.stream!);\n            source.connect(this.gainNode!);\n            this.gainNode!.connect(this.analyserNode!);\n            this.analyserNode!.connect(this.audioContext!.destination);\n        });\n    }\n\n    stopTestInput() {\n        if (!this.audioContext) {\n            return;\n        }\n        this.audioContext?.close();\n        delete this.audioContext;\n        this.closeStream();\n    }\n\n    async initStream(deviceId: string) {\n        const recordConstraints = {\n            // Try to set the best recording params for ripping the audio tracks\n            autoGainControl: false,\n            channelCount: 2,\n            deviceId: deviceId,\n            echoCancellation: false,\n            noiseSuppression: false,\n            sampleRate: 44100,\n            highpassFilter: false,\n        };\n        this.stream = await navigator.mediaDevices.getUserMedia({ audio: recordConstraints });\n\n        // Dump recording settings\n        const audioTracks = this.stream.getAudioTracks();\n        if (audioTracks.length > 0) {\n            console.log('Record Setings:', audioTracks[0].getSettings());\n        }\n    }\n\n    async startRecording() {\n        this.audioContext = new AudioContext();\n        const input = this.audioContext.createMediaStreamSource(this.stream!);\n        this.recorder = new Recorder(input, { workerPath: getPublicPathFor(`recorderWorker.js`) });\n        this.recorder.record();\n    }\n\n    async stopRecording() {\n        this.recorder.stop();\n    }\n\n    async closeStream() {\n        this.stream?.getTracks().forEach(track => track.stop());\n    }\n\n    downloadRecorded(title: string) {\n        this.recorder.exportWAV((buffer: Blob) => {\n            let url = URL.createObjectURL(buffer);\n            let a = document.createElement('a');\n            document.body.appendChild(a);\n            a.style.display = 'none';\n            a.href = url;\n            a.download = `${sanitizeTitle(title)}.wav`;\n            a.click();\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n        });\n    }\n}\n"],"sourceRoot":""}